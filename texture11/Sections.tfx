//@author: vux
//@help: template for texture fx
//@tags: texture
//@credits: 

Texture2D texture2d : PREVIOUS;
int levels = 10;
int initialScale = 10;
float levelFactor= 0.5;
SamplerState linearSampler : IMMUTABLE
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Clamp;
    AddressV = Clamp;
};

struct psInput
{
	float4 p : SV_Position;
	float2 uv : TEXCOORD0;
};

float4 PS(psInput input) : SV_Target
{
	float4 c = texture2d.Sample(linearSampler,input.uv);
	float h = c.y*initialScale;
	if(round(h*levels*levels)%levels > levels*levelFactor )
		return float4(1,1,1,1);
	else //if(h > level[1])
		return float4(0,0,0,1);
}

technique10 process
{
	pass P0
	{
		SetPixelShader(CompileShader(ps_4_0,PS()));
	}
}

