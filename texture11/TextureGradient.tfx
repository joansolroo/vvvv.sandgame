//@author: vux
//@help: template for texture fx
//@tags: texture
//@credits: 

Texture2D texture2d : PREVIOUS;
float2 size = float2(64,64);
SamplerState linearSampler : IMMUTABLE
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
};

struct psInput
{
	float4 p : SV_Position;
	float2 uv : TEXCOORD0;
};


float4 PS(psInput input) : SV_Target
{
	float4 c = texture2d.Sample(linearSampler,input.uv);
	float4 cUp = texture2d.Sample(linearSampler,input.uv+float2(0,-1)/size.x);
	float4 cLeft = texture2d.Sample(linearSampler,input.uv+float2(-1,0)/size.y);
	return float4(c.x,(c.x - cLeft.x)+0.5, (c.x - cUp.x)+0.5, 1);
}

technique10 Process
{
	pass P0
	{
		SetPixelShader(CompileShader(ps_4_0,PS()));
	}
}



