//@author: vux
//@help: template for texture fx
//@tags: texture
//@credits: 

Texture2D texture2d : PREVIOUS;
Texture2D colorTexture;
Texture2D mask;
float4 color<bool color=true; String uiname="Ambient Color";>  = {0, 0, 1, 1};

SamplerState linearSampler : IMMUTABLE
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Clamp;
    AddressV = Clamp;
};

struct psInput
{
	float4 p : SV_Position;
	float2 uv : TEXCOORD0;
};


float4 PS(psInput input) : SV_Target
{
	float4 p = texture2d.Sample(linearSampler,input.uv);
	float4 c = colorTexture.Sample(linearSampler,input.uv)*color;
	float m = mask.Sample(linearSampler,input.uv).x;
	float4 mix = float4(0,0,0,1);
	mix.rgb = c.rgb*m*c.a+p.rgb*(1-m);
	return mix;
}

technique10 Process
{
	pass P0
	{
		SetPixelShader(CompileShader(ps_4_0,PS()));
	}
}



